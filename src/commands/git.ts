import type { CommandItem } from './types'

// Git Commands - Version control
export const GIT_COMMANDS: CommandItem[] = [
  {
    label: 'Git Init',
    command: 'git init',
    description: 'Initialize a new git repository',
    category: 'git',
    icon: 'repo-create',
  },
  {
    label: 'Git Clone',
    command: 'git clone repository_url',
    description: 'Clone a repository',
    category: 'git',
    icon: 'repo-clone',
  },
  {
    label: 'Git Status',
    command: 'git status',
    description: 'Show working tree status',
    category: 'git',
    icon: 'git-branch',
  },
  {
    label: 'Git Add All',
    command: 'git add .',
    description: 'Add all changes to staging',
    category: 'git',
    icon: 'add',
  },
  {
    label: 'Git Add File',
    command: 'git add filename',
    description: 'Add specific file to staging',
    category: 'git',
  },
  {
    label: 'Git Commit',
    command: 'git commit -m "commit message"',
    description: 'Commit changes with message',
    category: 'git',
  },
  {
    label: 'Git Commit Amend',
    command: 'git commit --amend',
    description: 'Amend last commit',
    category: 'git',
  },
  {
    label: 'Git Push',
    command: 'git push origin branch_name',
    description: 'Push changes to remote',
    category: 'git',
  },
  {
    label: 'Git Pull',
    command: 'git pull origin branch_name',
    description: 'Pull changes from remote',
    category: 'git',
  },
  {
    label: 'Git Fetch',
    command: 'git fetch origin',
    description: 'Fetch changes from remote',
    category: 'git',
  },
  {
    label: 'Git Branch List',
    command: 'git branch',
    description: 'List local branches',
    category: 'git',
  },
  {
    label: 'Git Branch Remote',
    command: 'git branch -r',
    description: 'List remote branches',
    category: 'git',
  },
  {
    label: 'Git Create Branch',
    command: 'git checkout -b new_branch',
    description: 'Create and switch to new branch',
    category: 'git',
  },
  {
    label: 'Git Switch Branch',
    command: 'git checkout branch_name',
    description: 'Switch to existing branch',
    category: 'git',
  },
  {
    label: 'Git Merge',
    command: 'git merge branch_name',
    description: 'Merge branch into current branch',
    category: 'git',
  },
  {
    label: 'Git Delete Branch',
    command: 'git branch -d branch_name',
    description: 'Delete local branch',
    category: 'git',
  },
  {
    label: 'Git Log',
    command: 'git log --oneline',
    description: 'Show commit history',
    category: 'git',
  },
  {
    label: 'Git Diff',
    command: 'git diff',
    description: 'Show changes between commits',
    category: 'git',
  },
  {
    label: 'Git Stash',
    command: 'git stash',
    description: 'Stash current changes',
    category: 'git',
  },
  {
    label: 'Git Stash Pop',
    command: 'git stash pop',
    description: 'Apply and remove stash',
    category: 'git',
  },
  {
    label: 'Git Reset Soft',
    command: 'git reset --soft HEAD~1',
    description: 'Reset to previous commit (keep changes)',
    category: 'git',
  },
  {
    label: 'Git Reset Hard',
    command: 'git reset --hard HEAD~1',
    description: 'Reset to previous commit (discard changes)',
    category: 'git',
  },
  {
    label: 'Git Remote List',
    command: 'git remote -v',
    description: 'List remote repositories',
    category: 'git',
  },
  {
    label: 'Git Remote Add',
    command: 'git remote add origin repository_url',
    description: 'Add remote repository',
    category: 'git',
  },
  {
    label: 'Git Tag List',
    command: 'git tag',
    description: 'List all tags',
    category: 'git',
  },
  {
    label: 'Git Create Tag',
    command: 'git tag -a v1.0.0 -m "version 1.0.0"',
    description: 'Create annotated tag',
    category: 'git',
  },
  {
    label: 'Git Push Tags',
    command: 'git push origin --tags',
    description: 'Push all tags to remote',
    category: 'git',
  },
  {
    label: 'Git Rebase',
    command: 'git rebase branch_name',
    description: 'Rebase current branch onto another',
    category: 'git',
  },
  {
    label: 'Git Cherry Pick',
    command: 'git cherry-pick commit_hash',
    description: 'Apply specific commit to current branch',
    category: 'git',
  },
  {
    label: 'Git Config User',
    command: 'git config user.name "Your Name"',
    description: 'Set git user name',
    category: 'git',
  },
  {
    label: 'Git Config Email',
    command: 'git config user.email "your.email@example.com"',
    description: 'Set git user email',
    category: 'git',
  },
]
